{"version":3,"sources":["components/Logo.jsx","components/CustomizedAxisTick.jsx","components/Graph.jsx","components/CryptoNavBar.jsx","components/About.jsx","apiCall.js","App.js","serviceWorker.js","index.js"],"names":["Logo","Grid","container","justify","item","style","fontWeight","fontSize","marginTop","Component","CustomizedAxisTick","value","payload","x","verticalAnchor","visibleTicksCount","y","rest","transform","className","dy","textAnchor","fill","Graph","handleDelete","name","props","graphData","this","data","GridList","cellHeight","cols","width","map","el","GridListTile","key","id","GridListTileBar","title","Button","zIndex","variant","color","startIcon","onClick","e","background","height","margin","top","right","left","bottom","type","dataKey","stroke","interval","tick","CryptoNavBar","state","currencies","handleClick","handleCryptoName","Container","marginBottom","spacing","xs","currentTarget","About","position","paddingBottom","href","makeApiCall","axios","process","method","headers","then","res","catch","err","App","historicalData","getApiData","apiCall","setState","Data","shortid","generate","dates","moment","unix","time","format","prices","Math","round","high","low","filter","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mXAqBeA,E,iLAfX,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,UACtB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,wBAAIC,MAAO,CAAEC,WAAY,MAAOC,SAAU,SAA1C,eACc,kBAAC,IAAD,CAAgBF,MAAO,CAAEE,SAAU,WAEjD,wBAAIF,MAAO,CAAEC,WAAY,MAAOE,UAAW,UAA3C,qD,GARSC,a,qECqBJC,EAxBmB,SAAC,GAAD,IACrBC,EADqB,EAChCC,QAAWD,MAGXE,GAJgC,EAEhCC,eAFgC,EAGhCC,kBAHgC,EAIhCF,GACAG,EALgC,EAKhCA,EACGC,EAN6B,+EAQhC,uBAAGC,UAAS,oBAAeL,EAAf,YAAoBG,EAApB,MACV,0CACMC,EADN,CAEEE,UAAU,iBACVN,EAAG,EACHG,EAAG,EACHI,GAAI,GACJC,WAAW,MACXC,KAAK,OACLJ,UAAU,gBAETP,K,SCCcY,E,2MAEnBC,aAAe,SAAAC,GACb,EAAKC,MAAMF,aAAaC,I,wEAGhB,IAAD,OACDE,EAAYC,KAAKF,MAAMG,KAC7B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAUC,WAAY,IAAKC,KAAM,EAAGC,MAAM,QACvCN,EAAUO,KAAI,SAAAC,GAAE,OACf,kBAACC,EAAA,EAAD,CAAcC,IAAKF,EAAGG,GAAIL,MAAM,QAC9B,kBAACM,EAAA,EAAD,CACEC,MACE,kBAACC,EAAA,EAAD,CACEpC,MAAO,CAAEqC,OAAQ,OACjBC,QAAQ,WACRC,MAAM,YACNC,UAAW,kBAAC,IAAD,MACXC,QAAS,SAAAC,GAAC,OAAI,EAAKvB,aAAaW,EAAGG,MALrC,iBAOaH,EAAGV,KAPhB,WAUFpB,MAAO,CACL2C,WAAY,WAGhB,kBAAC,IAAD,CAAqBf,MAAM,OAAOgB,OAAQ,KACxC,kBAAC,IAAD,CACEpB,KAAMM,EAAGN,KACTqB,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,KAEhD,kBAAC,IAAD,CAAMC,KAAK,WAAWC,QAAQ,SAASC,OAAO,YAC9C,kBAAC,IAAD,CAAeA,OAAO,SACtB,kBAAC,IAAD,CACED,QAAQ,QACRE,SAAU,EACVC,KAAM,kBAAC,EAAD,QAER,kBAAC,IAAD,CAAOH,QAAQ,uB,GAzCE/C,a,SCfdmD,E,2MACnBC,MAAQ,CACNC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,Q,EAGlDC,YAAc,SAAAtC,GACZ,EAAKC,MAAMsC,iBAAiBvC,I,wEAIpB,IAAD,OACP,OACE,kBAACwC,EAAA,EAAD,CAAW5D,MAAO,CAAE6D,aAAc,SAChC,kBAACjE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASgE,QAAS,GACvCvC,KAAKiC,MAAMC,WAAW5B,KAAI,SAAA9B,GAAI,OAC7B,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACgE,GAAG,OAAO/B,IAAKjC,GACxB,kBAACqC,EAAA,EAAD,CACEhB,KAAMrB,EACNuC,QAAQ,YACRC,MAAM,UACNE,QAAS,SAAAC,GAAC,OAAI,EAAKgB,YAAYhB,EAAEsB,cAAc5C,QAE9CrB,a,GAtByBK,aCHrB6D,E,iLAEjB,OACI,yBAAKjE,MAAO,CAAEkE,SAAU,WAAYC,cAAe,SACjD,wBAAInE,MAAO,CAAEC,WAAY,QAAzB,WACU,uBAAGmE,KAAK,kCAAR,sB,GALehE,a,kBCDtBiE,EAAc,SAAA9D,GAEzB,OAAO+D,IAAM,8DAAD,OADGC,mEACH,iBACmEhE,EADnE,sBAEV,CACEiE,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBjD,KAAMjB,IAEPmE,MAAK,SAAAC,GAAG,OAAIA,EAAInD,QAChBoD,OAAM,SAAAC,GACL,MAAMA,MCoDGC,E,2MAtDbtB,MAAQ,CACNuB,eAAgB,KAChBzD,UAAW,I,EAGb0D,WAAa,SAAA5D,GACX6D,EACe7D,GACZsD,MAAK,SAAAC,GACJ,EAAKO,SAAS,CACZH,eAAgBJ,EAAIQ,KAAKA,UAG5BT,MAAK,WACJ,IAAMlD,EAAO,CACXJ,KAAMA,EACNa,GAAImD,IAAQC,WAOZ7D,KAAM,EAAKgC,MAAMuB,eAAelD,KAAI,SAAAC,GAClC,MAAO,CACLwD,MAAOC,IAAOC,KAAK1D,EAAG2D,MAAMC,OAAO,cACnCC,OAAQC,KAAKC,MAAM/D,EAAGgE,KAAgB,IAAThE,EAAGiE,KAAa,SAInD,EAAKb,SAAS,CAAE5D,UAAU,GAAD,mBAAM,EAAKkC,MAAMlC,WAAjB,CAA4BE,U,EAI3DL,aAAe,SAAAc,GACb,EAAKiD,SAAS,CACZ5D,UAAW,EAAKkC,MAAMlC,UAAU0E,QAAO,SAAAlE,GAAE,OAAIA,EAAGG,KAAOA,Q,wEAKzD,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAc6C,iBAAkBpC,KAAKyD,aACrC,kBAAC,EAAD,MACCzD,KAAKiC,MAAMlC,UAAU2E,OACpB,kBAAC,EAAD,CAAOzE,KAAMD,KAAKiC,MAAMlC,UAAWH,aAAcI,KAAKJ,eACpD,U,GAjDMf,aCAE8F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnC,MAAK,SAAAoC,GACjCA,EAAaC,kB","file":"static/js/main.a4f1ded1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nclass Logo extends Component {\r\n  render() {\r\n    return (\r\n      <Grid container justify=\"center\">\r\n        <Grid item>\r\n          <h1 style={{ fontWeight: \"300\", fontSize: \"70px\" }}>\r\n            CryptoIndex <TrendingUpIcon style={{ fontSize: \"70px\" }} />\r\n          </h1>\r\n          <h3 style={{ fontWeight: \"100\", marginTop: \"-10px\" }}>\r\n            Prices of the most popular cryptocurrencies\r\n          </h3>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nexport const CustomizedAxisTick = ({\r\n  payload: { value },\r\n  verticalAnchor,\r\n  visibleTicksCount,\r\n  x,\r\n  y,\r\n  ...rest\r\n}) => (\r\n  <g transform={`translate(${x},${y})`}>\r\n    <text\r\n      {...rest}\r\n      className=\"bar-chart-tick\"\r\n      x={0}\r\n      y={0}\r\n      dy={16}\r\n      textAnchor=\"end\"\r\n      fill=\"#666\"\r\n      transform=\"rotate(-20)\"\r\n    >\r\n      {value}\r\n    </text>\r\n  </g>\r\n);\r\n\r\nexport default CustomizedAxisTick;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  CartesianGrid,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport shortid from \"shortid\"\r\n\r\nimport CustomTooltip from \"./CustomTooltip\";\r\n\r\nimport CustomizedAxisTick from \"./CustomizedAxisTick\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nexport default class Graph extends Component {\r\n\r\n  handleDelete = name => {\r\n    this.props.handleDelete(name);\r\n  };\r\n\r\n  render() {\r\n    const graphData = this.props.data;\r\n    return (\r\n      <div>\r\n        <GridList cellHeight={320} cols={1} width=\"100%\">\r\n          {graphData.map(el => (\r\n            <GridListTile key={el.id} width=\"100%\">\r\n              <GridListTileBar\r\n                title={\r\n                  <Button\r\n                    style={{ zIndex: \"999\" }}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={e => this.handleDelete(el.id)}\r\n                  >\r\n                    {`delete ${el.name} graph`}\r\n                  </Button>\r\n                }\r\n                style={{\r\n                  background: \"white\"\r\n                }}\r\n              />\r\n              <ResponsiveContainer width=\"100%\" height={300}>\r\n                <LineChart\r\n                  data={el.data}\r\n                  margin={{ top: 20, right: 30, left: 25, bottom: 55 }}\r\n                >\r\n                  <Line type=\"monotone\" dataKey=\"prices\" stroke=\"#8884d8\" />\r\n                  <CartesianGrid stroke=\"#ccc\" />\r\n                  <XAxis\r\n                    dataKey=\"dates\"\r\n                    interval={1}\r\n                    tick={<CustomizedAxisTick />}\r\n                  />\r\n                  <YAxis dataKey=\"prices\" />\r\n                  {/* <Tooltip content={<CustomTooltip />} /> */}\r\n                </LineChart>\r\n              </ResponsiveContainer>\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport default class CryptoNavBar extends Component {\r\n  state = {\r\n    currencies: [\"BTC\", \"ETH\", \"BCH\", \"BSV\", \"EOS\", \"ETC\"]\r\n  };\r\n\r\n  handleClick = name => {\r\n    this.props.handleCryptoName(name);\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container style={{ marginBottom: \"30px\" }}>\r\n        <Grid container justify=\"center\" spacing={5}>\r\n          {this.state.currencies.map(item => (\r\n            <Grid item xs=\"auto\" key={item}>\r\n              <Button\r\n                name={item}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={e => this.handleClick(e.currentTarget.name)}\r\n              >\r\n                {item}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nexport default class About extends Component {\r\n  render() {\r\n    return (\r\n        <div style={{ position: \"relative\", paddingBottom: \"10px\"}}>\r\n          <h3 style={{ fontWeight: \"100\" }}>\r\n            Made by <a href=\"https://github.com/SzklaneDomy\">@SzklaneDomy</a>\r\n          </h3>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const makeApiCall = payload => {\r\n  const apiKey = process.env.REACT_APP_CRYPTO_INDEX\r\n  return axios(\r\n    `https://min-api.cryptocompare.com/data/v2/histoday?api_key=${apiKey}&fsym=${payload}&tsym=USD&limit=30`\r\n  , {\r\n      method: 'GET',\r\n      headers: {\r\n        'content-type': 'application/json',\r\n      },\r\n      data: payload,\r\n  })\r\n    .then(res => res.data)\r\n    .catch(err => {\r\n      throw err;\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport shortid from \"shortid\";\nimport moment from \"moment\";\n\nimport Logo from \"./components/Logo\";\nimport Graph from \"./components/Graph\";\nimport CryptoNavBar from \"./components/CryptoNavBar\";\nimport About from \"./components/About\";\n\nimport * as apiCall from \"./apiCall\";\n\nclass App extends Component {\n  state = {\n    historicalData: null,\n    graphData: []\n  };\n\n  getApiData = name => {\n    apiCall\n      .makeApiCall(name)\n      .then(res => {\n        this.setState({\n          historicalData: res.Data.Data\n        });\n      })\n      .then(() => {\n        const data = {\n          name: name,\n          id: shortid.generate(),\n          // dates: this.state.historicalData.map(el =>\n          //   moment.unix(el.time).format(\"MM/DD/YYYY\")\n          // ),\n          // prices: this.state.historicalData.map(\n          //   el => Math.round(el.high + el.low * 100) / 100\n          // )\n          data: this.state.historicalData.map(el => {\n            return {\n              dates: moment.unix(el.time).format(\"MM/DD/YYYY\"),\n              prices: Math.round(el.high + el.low * 100) / 100\n            };\n          })\n        };\n        this.setState({ graphData: [...this.state.graphData, data] });\n      });\n  };\n\n  handleDelete = id => {\n    this.setState({\n      graphData: this.state.graphData.filter(el => el.id !== id)\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Logo />\n        <CryptoNavBar handleCryptoName={this.getApiData} />\n        <About />\n        {this.state.graphData.length ? (\n          <Graph data={this.state.graphData} handleDelete={this.handleDelete} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}